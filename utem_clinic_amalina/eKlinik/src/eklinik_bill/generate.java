/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eklinik_bill;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.substring;
import main.RMIConnector;

/**
 *
 * @author Amalina
 */
public class generate extends javax.swing.JFrame {

    // call library
    RMIConnector rc = new RMIConnector();

    // declaration host and port
    String host = "biocore-devp.utem.edu.my";
    int port = 1099; // for now, stick to this port

    String Table_click1 = billing.setValue();
    static String BILL_NO;
    static String cust_id;
    //String ;
    static String Table_click2;
    static String Table_click3;
    static String orderno;

    public static String setValue1() {
        return Table_click2;
    }

    public static String setValue() {
        return Table_click3;
    }

    public static String setValue2() {
        return orderno;
    }

    public static String setValueBillNo() {
        return BILL_NO;
    }
    public static String setValueCustId() {
        return cust_id;
    }
    /**
     * Creates new form generate
     */
    public generate() {
        initComponents();
        billdetails();
        Table_click3 = Table_click1;

        //  System.out.println(Table_click1); 
    }
    // static String Table_click1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtf_name = new javax.swing.JTextField();
        jtf_address = new javax.swing.JTextField();
        jtf_ic = new javax.swing.JTextField();
        jtf_id = new javax.swing.JTextField();
        jtf_telNum = new javax.swing.JTextField();
        jtf_billNo = new javax.swing.JTextField();
        jtf_date = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_print = new javax.swing.JButton();
        btn_confirm = new javax.swing.JButton();
        btn_modify = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill Details"));
        jPanel1.setToolTipText("");

        jtf_name.setEditable(false);

        jtf_address.setEditable(false);

        jtf_ic.setEditable(false);

        jtf_id.setEditable(false);

        jtf_telNum.setEditable(false);

        jtf_billNo.setEditable(false);
        jtf_billNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_billNoActionPerformed(evt);
            }
        });

        jtf_date.setEditable(false);
        jtf_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_dateActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        jLabel2.setText("Address");

        jLabel3.setText("IC Number");

        jLabel4.setText("Other ID");

        jLabel5.setText("Phone No.");

        jLabel6.setText("Bill No.");

        jLabel7.setText("Date");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Description", "Quantity", "Unit Price", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btn_print.setText("Print Receipt");
        btn_print.setEnabled(false);
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        btn_confirm.setText("Confirm");
        btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmActionPerformed(evt);
            }
        });

        btn_modify.setText("Modify");
        btn_modify.setEnabled(false);
        btn_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifyActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jtf_ic)
                                    .addComponent(jtf_id)
                                    .addComponent(jtf_telNum))
                                .addGap(77, 77, 77)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtf_billNo, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                    .addComponent(jtf_date)))
                            .addComponent(jtf_name)
                            .addComponent(jtf_address)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_modify, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_name, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_address, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jtf_ic))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_id, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_billNo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_telNum, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_date, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_modify, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        // TODO add your handling code here:

        pdf();
//        billing m = new billing(); //set new window
//        m.setVisible(true);//set new window visible
        //dispose(); // for hide current window
        try { //keluarkan pdf after click
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "C:\\Users\\user\\Dropbox\\eKlinik\\Receipt.pdf");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error");
        }        // TODO add your handling code here:

    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        billing m = new billing(); //set new window
        m.setVisible(true);//set new window visible
        dispose(); // for hide current window
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifyActionPerformed
//        jButton1.setEnabled(false);
//        jButton2.setEnabled(true);
//        jButton3.setEnabled(false);
//        jButton4.setEnabled(true);
//        jButton5.setEnabled(true);   
//        try {
//                String sql = "SELECT DISTINCT "
//                + "pb.PATIENT_NAME, "
//                + "pb.HOME_ADDRESS, "
//                + "pb.NEW_IC_NO, "
//                + "pb.ID_NO, "
//                + "pb.MOBILE_PHONE, "
//                + "ch.bill_no, "
//                + "ch.txn_date, "
//                + "cd.item_cd, "
//                + "cd.item_desc, "
//                + "cd.quantity, "
//                + "cd.item_amt, "
//                + "cd.quantity * cd.item_amt AS total "
//                + "FROM customer_hdr ch "
//                + "INNER JOIN customer_dtl cd "
//                + "ON ch.bill_no = cd.bill_no "
//                + "INNER JOIN pms_patient_biodata pb "
//                + "ON ch.customer_id = pb.ID_NO "
//                + "WHERE ch.customer_id = '"+cust_id+"'";
//                ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query
//
//                jTextField1.setText(data.get(0).get(0));
//                jTextField2.setText(data.get(0).get(1));
//                jTextField3.setText(data.get(0).get(2));
//                jTextField4.setText(data.get(0).get(3));
//                jTextField5.setText(data.get(0).get(4));
//                jTextField6.setText(data.get(0).get(5));
//                jTextField7.setText(data.get(0).get(6));
//                DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
//
//                //remove all row
//                int rowCount1 = model1.getRowCount();
//                for (int i = rowCount1 - 1; i >= 0; i--) {
//                    model1.removeRow(i);
////                System.out.println("i " + i);
//                }
//
//                //add row and show value
//                for (int i = 0; i < data.size(); i++) {
//                    model1.addRow(new Object[]{"", "", "", "", ""});
//
//                    //jTable1.setValueAt((Object)i, 1, 1);
//                    jTable1.setValueAt(data.get(i).get(7), i, 0);
//                    jTable1.setValueAt(data.get(i).get(8), i, 1);
//                    jTable1.setValueAt(data.get(i).get(9), i, 2);
//                    jTable1.setValueAt(data.get(i).get(10), i, 3);
//                    jTable1.setValueAt(data.get(i).get(11), i, 4);
//
//                }
//
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
after_modify m = new after_modify(); //set new window
            m.setVisible(true);//set new window visible
            dispose(); // for hide current window
    }//GEN-LAST:event_btn_modifyActionPerformed

    private void btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmActionPerformed
        // TODO add your handling code here:
        btn_print.setEnabled(true);
        btn_confirm.setEnabled(false);
        btn_modify.setEnabled(true);
        btn_cancel.setEnabled(false);
        try {
            String Jtext1 = (String) jtf_name.getText();
            String Jtext2 = (String) jtf_address.getText();
            String Jtext3 = (String) jtf_ic.getText();
            String Jtext4 = (String) jtf_id.getText();
            String Jtext5 = (String) jtf_telNum.getText();
            String Jtext6 = (String) jtf_billNo.getText();
            String Jtext7 = (String) jtf_date.getText();
            String last_seq = substring(Jtext6, 1, 10);

            //System.out.println(Jtext7);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rowCount = model.getRowCount();
            double total = 0;
            int datasize = 0;
            for (int i = 0; i < rowCount; i++) {
                String Jrow1 = (jTable1.getModel().getValueAt(i, 0).toString());
                String Jrow2 = (jTable1.getModel().getValueAt(i, 1).toString());
                String Jrow3 = (jTable1.getModel().getValueAt(i, 2).toString());
                String Jrow4 = (jTable1.getModel().getValueAt(i, 3).toString());
                Object Jrow5 = (jTable1.getModel().getValueAt(i, 4).toString());

                String sqlinsert3 = "insert into customer_dtl(bill_no, txn_date, item_cd, item_desc, item_amt, quantity, customer_id )"
                        + "values('" + Jtext6 + "','" + Jtext7 + "','" + Jrow1 + "','" + Jrow2 + "','" + Jrow4 + "','" + Jrow3 + "','" + Jtext4 + "' )";

                boolean insert3 = rc.setQuerySQL(host, port, sqlinsert3);

                String sqlinsert4 = "insert into last_seq_no(last_seq_no )"
                        + "values('" + last_seq + "' )";

                boolean insert4 = rc.setQuerySQL(host, port, sqlinsert4);
                double subtol = Integer.parseInt((String) Jrow5);
                datasize = datasize + 1;
                total = total + subtol;

                //System.out.println("total" + total);
            }
            DateFormat dateFormat;
            dateFormat = new SimpleDateFormat("MM"); //2015-01-06 
            Date date = new Date();

            String credit = null;
            String bulan = dateFormat.format(date);

            if (null != bulan) {
                switch (bulan) {
                    case "01":
                        credit = "cr_amt_1";
                        break;
                    case "02":
                        credit = "cr_amt_2";
                        break;
                    case "03":
                        credit = "cr_amt_3";
                        break;
                    case "04":
                        credit = "cr_amt_4";
                        break;
                    case "05":
                        credit = "cr_amt_5";
                        break;
                    case "06":
                        credit = "cr_amt_6";
                        break;
                    case "07":
                        credit = "cr_amt_7";
                        break;
                    case "08":
                        credit = "cr_amt_8";
                        break;
                    case "09":
                        credit = "cr_amt_9";
                        break;
                    case "10":
                        credit = "cr_amt_10";
                        break;
                    case "11":
                        credit = "cr_amt_11";
                        break;
                    case "12":
                        credit = "cr_amt_12";
                        break;
                    default:
                        break;
                }
            }

            String sqlinsert2 = "insert into customer_hdr(customer_id, bill_no, txn_date, item_desc, item_amt, quantity)"
                    + "values('" + Jtext4 + "','" + Jtext6 + "','" + Jtext7 + "','" + Jtext1 + "','" + total + "','" + datasize + "' )";

            boolean insert2 = rc.setQuerySQL(host, port, sqlinsert2);
            String sqlinsert5 = "insert into customer_ledger(customer_id, txn_date, bill_no, bill_desc, bill_amt, " + credit + " )"
                    + "values('" + Jtext4 + "', '" + Jtext7 + "', '" + Jtext6 + "', '" + Jtext1 + "', '" + total + "', '" + total + "' )";

//                System.out.println("insert into customer_ledger(customer_id, txn_date, bill_no, bill_desc, bill_amt, "+credit+" )"
//                        + "values('"+Jtext4+"', '"+Jtext7+"', '"+Jtext6+"', '"+Jtext1+"', '"+total+"', '"+total+"' )");
            boolean insert5 = rc.setQuerySQL(host, port, sqlinsert5);

            String infoMessage = "Success add data";
            JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_confirmActionPerformed

    private void jtf_billNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_billNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_billNoActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
//        int row = jTable1.getSelectedRow();
//        Table_click2 = (jTable1.getModel().getValueAt(row, 0).toString());
//        edit m = new edit(); //set new window
//        m.setVisible(true);//set new window visible
//        dispose(); // for hide current window
//
//        String sql = "SELECT DISTINCT pdm.ORDER_NO "
//                + "FROM ehr_central ec "
//                + "INNER JOIN pms_patient_biodata pb "
//                + "ON ec.PMI_NO = pb.PMI_NO "
//                + "INNER JOIN pis_order_master pom "
//                + "ON ec.PMI_NO = pom.PMI_NO "
//                + "INNER JOIN pis_dispense_master pdm "
//                + "ON pom.ORDER_NO = pdm.ORDER_NO "
//                + "INNER JOIN pis_dispense_detail pdd "
//                + "ON pdm.ORDER_NO = pdd.ORDER_NO "
//                + "INNER JOIN pis_mdc2 mdc "
//                + "ON pdd.DRUG_ITEM_CODE = mdc.UD_MDC_CODE "
//                + "WHERE (ec.status = 1 OR ec.status = 3) "
//                + "AND ec.PMI_NO = '" + Table_click1 + "' "
//                + "AND  pdd.DRUG_ITEM_CODE = '" + Table_click2 + "' ";
//        //+ "AND substring(pom.EPISODE_CODE,1,10)='2015-12-21' "
//        //+ "AND substring(pdm.ORDER_DATE,1,10)='2015-12-21'";
////                    + "AND substring(pom.EPISODE_CODE,1,10)='" + dateFormat.format(date) + "' "
////                    + "AND substring(pdm.ORDER_DATE,1,10)='" + dateFormat.format(date) + "'";
//        ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query
//        orderno = data.get(0).get(0);
//        System.out.println("test order no: " + orderno);

    }//GEN-LAST:event_jTable1MouseClicked

    private void jtf_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_dateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new generate().setVisible(true);
            }
        });
    }

    public void billdetails() {
        try {
//        int row = jTable4.getSelectedRow(); //get no of row
//            String Table_click = (jTable4.getModel().getValueAt(row, 0).toString()); //assign row value to select
            DateFormat dateFormat;
            dateFormat = new SimpleDateFormat("MMyyyy"); //2015-01-06 
            Date date = new Date();
            String getdate = dateFormat.format(date);
            String sqlseqno = "SELECT MAX(last_seq_no) AS no FROM last_seq_no";
            ArrayList<ArrayList<String>> dataseq = rc.getQuerySQL(host, port, sqlseqno);// execute query

            String test_seq = dataseq.get(0).get(0);
            //System.out.println(Table_click1); 

            int ts = Integer.parseInt(test_seq);
            // System.out.println(ts); //0

            int tss = ts + 1;
            //System.out.println(tss); //1
            String tss2 = Integer.toString(tss);

            int len1 = (int) Math.log10(tss) + 1;
            //System.out.println(len1); //1 (length)
            String zero = "0";
            String Num = tss2;
            int k;
            for (k = len1; k < 10; k++) {
                Num = zero + Num;

            }

            BILL_NO = Num + getdate;
            // System.out.println(BILL_NO); //1012016

            String sql = "SELECT DISTINCT "
                    + "pb.PATIENT_NAME,  pb.HOME_ADDRESS, pb.NEW_IC_NO, pb.ID_NO, pb.MOBILE_PHONE, NOW(), "
                    + "pdd.DRUG_ITEM_CODE, mdc.D_TRADE_NAME, pdd.DISPENSED_QTY, mdc.D_PRICE_PPACK, pdd.DISPENSED_QTY * mdc.D_PRICE_PPACK AS TOTAL "
                    + "FROM ehr_central ec "
                    + "INNER JOIN pms_patient_biodata pb "
                    + "ON ec.PMI_NO = pb.PMI_NO "
                    + "INNER JOIN pis_order_master pom "
                    + "ON ec.PMI_NO = pom.PMI_NO "
                    + "INNER JOIN pis_dispense_master pdm "
                    + "ON pom.ORDER_NO = pdm.ORDER_NO "
                    + "INNER JOIN pis_dispense_detail pdd "
                    + "ON pdm.ORDER_NO = pdd.ORDER_NO "
                    + "INNER JOIN pis_mdc2 mdc "
                    + "ON pdd.DRUG_ITEM_CODE = mdc.UD_MDC_CODE "
                    + "WHERE (ec.status = 1 OR ec.status = 3) "
                    + "AND ec.PMI_NO = '" + Table_click1 + "' ";
//            + "AND substring(pom.EPISODE_CODE,1,10)='2015-12-21' "
//            + "AND substring(pdm.ORDER_DATE,1,10)='2015-12-21'";
//                    + "AND substring(pom.EPISODE_CODE,1,10)='" + dateFormat.format(date) + "' "
//                    + "AND substring(pdm.ORDER_DATE,1,10)='" + dateFormat.format(date) + "'";
            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

            cust_id = data.get(0).get(3);
            cust_id = data.get(0).get(3);
            System.out.println("cust id no : " + cust_id);
            System.out.println("bill no : " + BILL_NO);
            System.out.println("cust pmi no : " + BILL_NO);
            //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            jtf_name.setText(data.get(0).get(0));
            jtf_address.setText(data.get(0).get(1));
            jtf_ic.setText(data.get(0).get(2));
            jtf_id.setText(data.get(0).get(3));
            jtf_telNum.setText(data.get(0).get(4));
            jtf_billNo.setText(BILL_NO);
            jtf_date.setText(data.get(0).get(5));
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            //remove all row
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
//                System.out.println("i " + i);
            }

            //add row and show value
            for (int i = 0; i < data.size(); i++) {
                model.addRow(new Object[]{"", "", "", "", ""});

                //jTable1.setValueAt((Object)i, 1, 1);
                jTable1.setValueAt(data.get(i).get(6), i, 0);
                jTable1.setValueAt(data.get(i).get(7), i, 1);
                jTable1.setValueAt(data.get(i).get(8), i, 2);
                jTable1.setValueAt(data.get(i).get(9), i, 3);
                jTable1.setValueAt(data.get(i).get(10), i, 4);

            }

            String id = data.get(0).get(3);
//            System.out.println(id);
            int len = id.length();
//            System.out.println(len);

            if (len == 10) {
                String sqlitem = "SELECT * FROM miscellaneous_item where item_desc = 'Student'";
                ArrayList<ArrayList<String>> dataitem = rc.getQuerySQL(host, port, sqlitem);
                String code = dataitem.get(0).get(1);
                String desc = dataitem.get(0).get(2);
                String price = dataitem.get(0).get(4);
                String total = dataitem.get(0).get(4);
                Object[] row = {code, desc, 1, price, total};
                model.addRow(row);
            } else if (len == 5) {
                String sqlitem1 = "SELECT * FROM miscellaneous_item where item_desc = 'Staff'";
                ArrayList<ArrayList<String>> dataitem1 = rc.getQuerySQL(host, port, sqlitem1);
                String code = dataitem1.get(0).get(1);
                String desc = dataitem1.get(0).get(2);
                String price = dataitem1.get(0).get(4);
                String total = dataitem1.get(0).get(4);
                Object[] row = {code, desc, 1, price, total};
                model.addRow(row);
            } else {
                String sqlitem2 = "SELECT * FROM miscellaneous_item where item_desc = 'Other'";
                ArrayList<ArrayList<String>> dataitem2 = rc.getQuerySQL(host, port, sqlitem2);
                String code = dataitem2.get(0).get(1);
                String desc = dataitem2.get(0).get(2);
                String price = dataitem2.get(0).get(4);
                String total = dataitem2.get(0).get(4);
                Object[] row = {code, desc, 1, price, total};
                model.addRow(row);
            }
            DateFormat dateFormat1;
            dateFormat1 = new SimpleDateFormat("yyyy-MM-dd"); //2015-01-06 
            Date date1 = new Date();
            String getdate1 = dateFormat.format(date1);
            String sql2 = "SELECT * FROM temp_item WHERE customer_id ='" + Table_click1 + "' AND date = '" + getdate1 + "' ";

            ArrayList<ArrayList<String>> data2 = rc.getQuerySQL(host, port, sql2);// execute query
            for (int i = 0; i < data2.size(); i++) {
                String code = data2.get(i).get(3);
                String desc = data2.get(i).get(4);
                String qt = data2.get(i).get(5);
                String price = data2.get(i).get(6);
                double qt2 = Double.parseDouble(qt);
                double price2 = Double.parseDouble(price);
                double to = qt2 * price2;

                // System.out.println("test " +to); //0
                int test = (int) to;
                String tot = Integer.toString(test);
                String total = tot;

                // System.out.println(total); //0
                Object[] row = {code, desc, qt, price, total};
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

//    public void addRow() {
//        try {
//            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//
//            //add row and show value
//            model.addRow(new Object[]{"", "", "", "", ""});
//
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
    public void pdf() {
        Document document = new Document(PageSize.A4, 36, 36, 64, 36); //create new document
        document.setMargins(40, 30, 50, 50); //set document margin

        int num = 0;
        try {
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Receipt.pdf"));
            document.open(); //open document
            //database query

            String sql = "SELECT DISTINCT "
                    + "pb.PATIENT_NAME, "
                    + "pb.HOME_ADDRESS, "
                    + "pb.NEW_IC_NO, "
                    + "pb.ID_NO, "
                    + "pb.MOBILE_PHONE, "
                    + "ch.bill_no, "
                    + "ch.txn_date, "
                    + "cd.item_cd, "
                    + "cd.item_desc, "
                    + "cd.quantity, "
                    + "cd.item_amt, "
                    + "(cd.quantity * cd.item_amt), "
                    + "ch.item_amt "
                    + "FROM customer_hdr ch "
                    + "INNER JOIN customer_dtl cd "
                    + "ON ch.customer_id = cd.customer_id "
                    + "INNER JOIN pms_patient_biodata pb "
                    + "ON cd.customer_id = pb.ID_NO "
                    + "WHERE ch.customer_id = '" + cust_id + "'  and ch.bill_no = '" + BILL_NO + "' ";
            //+ "AND ch.txn_date = '2016-02-01'";
            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

            //initialize pdf
            Font recno = new Font(Font.TIMES_ROMAN, 10);
            Font recti = new Font(Font.HELVETICA, 16, Font.BOLD);
            Font rectem = new Font(Font.HELVETICA, 12, Font.BOLD);
            Font rectemja = new Font(Font.COURIER, 12);
            Font rectemjabold = new Font(Font.COURIER, 12, Font.BOLD);
            //--------------------------table bill------------------------------------------>
            PdfPTable table = new PdfPTable(6);
            table.setWidths(new float[]{0.5f, 1.5f, 4f, 1.5f, 1.5f, 1.5f});
            table.setLockedWidth(true);
            table.setTotalWidth(document.right() - document.left());
            //--------------------------receipt no------------------------------------------>
            PdfPTable header_table = new PdfPTable(4);
            header_table.setWidths(new float[]{2f, 7f, 1.5f, 4f});
            header_table.setLockedWidth(true);
            header_table.setTotalWidth(document.right() - document.left());

            //--------------------------table header------------------------------------------>
            Image logo = Image.getInstance("pic/logo.png");
            logo.scaleAbsolute(115, 50);

            PdfPCell cell1 = new PdfPCell(logo);
            cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell1.setBorder(Rectangle.NO_BORDER);
            cell1.setColspan(4);
            cell1.setLeading(15f, 0.3f);
            header_table.addCell(cell1);
            //-----------------------------Title--------------------------------------->
            PdfPCell cell200 = new PdfPCell(new Phrase(" ", recti));
            cell200.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell200.setBorder(Rectangle.NO_BORDER);
            cell200.setColspan(4);
            header_table.addCell(cell200);
            PdfPCell cell2 = new PdfPCell(new Phrase("RECEIPT", recti));
            cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell2.setBorder(Rectangle.NO_BORDER);
            cell2.setColspan(4);
            header_table.addCell(cell2);

            PdfPCell cell001 = new PdfPCell(new Phrase(" ", recti));
            cell001.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell001.setBorder(Rectangle.NO_BORDER);
            cell001.setColspan(4);
            header_table.addCell(cell001);

            String nama = data.get(0).get(0);
            String address = data.get(0).get(1);
            String ic = data.get(0).get(2);
            String id = data.get(0).get(3);
            String phone = data.get(0).get(4);
            String bill_no = data.get(0).get(5);
            String date = data.get(0).get(6);

            // String grandtotal = data.get(i).get(10);
            //System.out.println(name);
            //--------------------------Receipt item------------------------------------------>
            PdfPCell cell11 = new PdfPCell(new Phrase("Name", rectem));
            cell11.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell11.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell12 = new PdfPCell(new Phrase(": " + nama, rectemja));
            cell12.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell12.setBorder(Rectangle.NO_BORDER);
            cell12.setColspan(3);

            header_table.addCell(cell11);
            header_table.addCell(cell12);

            PdfPCell cell21 = new PdfPCell(new Phrase("Address", rectem));
            cell21.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell21.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell22 = new PdfPCell(new Phrase(": " + address, rectemja));
            cell22.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell22.setBorder(Rectangle.NO_BORDER);
            cell22.setColspan(3);

            header_table.addCell(cell21);
            header_table.addCell(cell22);

            PdfPCell cell31 = new PdfPCell(new Phrase("IC Number", rectem));
            cell31.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell31.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell32 = new PdfPCell(new Phrase(": " + ic, rectemja));
            cell32.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell32.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell33 = new PdfPCell(new Phrase(" ", rectem));
            cell33.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell33.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell34 = new PdfPCell(new Phrase(" ", rectemja));
            cell34.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell34.setBorder(Rectangle.NO_BORDER);

            header_table.addCell(cell31);
            header_table.addCell(cell32);
            header_table.addCell(cell33);
            header_table.addCell(cell34);

            PdfPCell cell41 = new PdfPCell(new Phrase("Other ID", rectem));
            cell41.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell41.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell42 = new PdfPCell(new Phrase(": " + id, rectemja));
            cell42.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell42.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell43 = new PdfPCell(new Phrase("Bill No", rectem));
            cell43.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell43.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell44 = new PdfPCell(new Phrase(": " + bill_no, rectemja));
            cell44.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell44.setBorder(Rectangle.NO_BORDER);

            header_table.addCell(cell41);
            header_table.addCell(cell42);
            header_table.addCell(cell43);
            header_table.addCell(cell44);

            PdfPCell cell51 = new PdfPCell(new Phrase("No. Tel", rectem));
            cell51.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell51.setBorder(Rectangle.NO_BORDER);
            PdfPCell cell52 = new PdfPCell(new Phrase(": " + phone, rectemja));
            cell52.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell52.setBorder(Rectangle.NO_BORDER);

            DateFormat dateFormat;
            dateFormat = new SimpleDateFormat("dd-MM-yyyy"); //2015-01-06 
            Date date1 = new Date();
            String getdate = dateFormat.format(date1);

            PdfPCell cell53 = new PdfPCell(new Phrase("Date", rectem));
            cell53.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell53.setBorder(Rectangle.NO_BORDER);

            PdfPCell cell54 = new PdfPCell(new Phrase(": " + getdate, rectemja));
            cell54.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell54.setBorder(Rectangle.NO_BORDER);

            header_table.addCell(cell51);
            header_table.addCell(cell52);
            header_table.addCell(cell53);
            header_table.addCell(cell54);

            PdfPCell cell002 = new PdfPCell(new Phrase(" ", recti));
            cell002.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell002.setBorder(Rectangle.NO_BORDER);
            cell002.setColspan(4);
            header_table.addCell(cell002);

            //-------------------------------------------------------------------->
            PdfPCell cell61 = new PdfPCell(new Phrase("No.", rectem));
            cell61.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell cell62 = new PdfPCell(new Phrase("Item", rectem));
            cell62.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell cell63 = new PdfPCell(new Phrase("Description", rectem));
            cell63.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell cell64 = new PdfPCell(new Phrase("Quantity", rectem));
            cell64.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell cell65 = new PdfPCell(new Phrase("Unit Price", rectem));
            cell65.setHorizontalAlignment(Element.ALIGN_CENTER);
            PdfPCell cell66 = new PdfPCell(new Phrase("Total Price", rectem));
            cell66.setHorizontalAlignment(Element.ALIGN_CENTER);

            table.addCell(cell61);
            table.addCell(cell62);
            table.addCell(cell63);
            table.addCell(cell64);
            table.addCell(cell65);
            table.addCell(cell66);

            for (int i = 0; i < data.size(); i++) {

                String NO = Integer.toString(num);

                String item = data.get(i).get(7);
                String description = data.get(i).get(8);
                String quantity = data.get(i).get(9);
                String price = data.get(i).get(10);
                String total = data.get(i).get(11);
                // String grandtotal = data.get(i).get(10);
                //System.out.println(name);

                PdfPCell cell71 = new PdfPCell(new Phrase(NO, rectemja));
                cell71.setHorizontalAlignment(Element.ALIGN_CENTER);
                PdfPCell cell72 = new PdfPCell(new Phrase(item, rectemja));
                cell72.setHorizontalAlignment(Element.ALIGN_LEFT);
                PdfPCell cell73 = new PdfPCell(new Phrase(description, rectemja));
                cell73.setHorizontalAlignment(Element.ALIGN_LEFT);
                PdfPCell cell74 = new PdfPCell(new Phrase(quantity, rectemja));
                cell74.setHorizontalAlignment(Element.ALIGN_CENTER);
                PdfPCell cell75 = new PdfPCell(new Phrase(price, rectemja));
                cell75.setHorizontalAlignment(Element.ALIGN_CENTER);
                PdfPCell cell76 = new PdfPCell(new Phrase(total, rectemja));
                cell76.setHorizontalAlignment(Element.ALIGN_CENTER);

                table.addCell(cell71);
                table.addCell(cell72);
                table.addCell(cell73);
                table.addCell(cell74);
                table.addCell(cell75);
                table.addCell(cell76);

                num = num + 1;
            }
            //--------------------------table bill------------------------------------------>
            PdfPTable total = new PdfPTable(6);
            total.setWidths(new float[]{0.5f, 1.5f, 4f, 1.5f, 1.5f, 1.5f});
            total.setLockedWidth(true);
            total.setTotalWidth(document.right() - document.left());
            //--------------------------table bill------------------------------------------>

            String gt2 = data.get(0).get(12);
//            System.out.println(gt);
            PdfPCell cell81 = new PdfPCell(new Phrase("Grand Total : RM  ", rectem));
            cell81.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell81.setColspan(5);
            PdfPCell cell86 = new PdfPCell(new Phrase("2218.00", rectemjabold));
            cell86.setHorizontalAlignment(Element.ALIGN_CENTER);

            total.addCell(cell81);
            total.addCell(cell86);
            //-------------------------------------------------------------------->

            document.add(header_table);
            document.add(table);
            document.add(total);
            document.close();//close document

            writer.close();
            billing m = new billing(); //set new window
        m.setVisible(true);//set new window visible
        dispose(); // for hide current window
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_confirm;
    private javax.swing.JButton btn_modify;
    private javax.swing.JButton btn_print;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtf_address;
    private javax.swing.JTextField jtf_billNo;
    private javax.swing.JTextField jtf_date;
    private javax.swing.JTextField jtf_ic;
    private javax.swing.JTextField jtf_id;
    private javax.swing.JTextField jtf_name;
    private javax.swing.JTextField jtf_telNum;
    // End of variables declaration//GEN-END:variables
}
