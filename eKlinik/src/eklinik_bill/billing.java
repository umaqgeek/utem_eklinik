/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eklinik_bill;

/**
 *
 * @author Amalina
 */
import static java.lang.String.format;
import java.text.DateFormat;
import java.text.DecimalFormat;
import static java.text.MessageFormat.format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import main.RMIConnector;

public class billing extends javax.swing.JFrame {

    // call library
    RMIConnector rc = new RMIConnector();

    // declaration host and port
    String host = "biocore-devp.utem.edu.my";
    int port = 1099; // for now, stick to this port

    static String Table_click;

    String billno;
    String itemCode;

    /**
     * Creates new form billing
     */
    public billing() {
        initComponents();
        Table4();
        Table2();
        Table3billitem();
    }

    public static String setValue() {
        return Table_click;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_generateBill = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtf_search = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jtf_mm_itemCd = new javax.swing.JTextField();
        jtf_mm_ItemDesc = new javax.swing.JTextField();
        jtf_mm_BuyPrice = new javax.swing.JTextField();
        jtf_mm_sellPrice = new javax.swing.JTextField();
        jtf_mm_disc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_mm_add = new javax.swing.JButton();
        btn_mm_cancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btn_mm_update = new javax.swing.JButton();
        btn_mm_delete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtf_mb_name = new javax.swing.JTextField();
        jtf_mb_address = new javax.swing.JTextField();
        jtf_mb_ic = new javax.swing.JTextField();
        jtf_mb_id = new javax.swing.JTextField();
        jtf_mb_phoneNum = new javax.swing.JTextField();
        jtf_mb_billNo = new javax.swing.JTextField();
        jtf_mb_date = new javax.swing.JTextField();
        jtf_mb_itemCd = new javax.swing.JTextField();
        jtf_mb_itemDesc = new javax.swing.JTextField();
        jtf_mb_quantity = new javax.swing.JTextField();
        jtf_mb_unitPrice = new javax.swing.JTextField();
        jtf_mb_total = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btn_mb_add = new javax.swing.JButton();
        btn_mb_cancel = new javax.swing.JButton();
        btn_mb_update = new javax.swing.JButton();
        btn_mb_delete = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill Description"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ", "Description", "Quantity", "Unit Price", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable1);

        btn_generateBill.setText("Generate Bill");
        btn_generateBill.setEnabled(false);
        btn_generateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generateBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(515, 515, 515)
                .addComponent(btn_generateBill)
                .addContainerGap(578, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_generateBill, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Information"));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PMI No.", "IC No.", "Other ID", "Name", "Address", "Phone No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.getTableHeader().setReorderingAllowed(false);
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable4);

        jLabel1.setText("Enter Patient Information:");

        jtf_search.setToolTipText("Example : Patient Name, IC No. Other ID");
        jtf_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jtf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Billing", jPanel3);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jtf_mm_itemCd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_mm_itemCdActionPerformed(evt);
            }
        });

        jLabel2.setText("Item Code");

        jLabel3.setText("Item Description");

        jLabel4.setText("Buying Price");

        jLabel5.setText("Selling Price");

        jLabel6.setText("Discount");

        btn_mm_add.setText("Add");
        btn_mm_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mm_addActionPerformed(evt);
            }
        });

        btn_mm_cancel.setText("Cancel");
        btn_mm_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mm_cancelActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Buying Price", "Selling Price", "Discount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);

        btn_mm_update.setText("Update");
        btn_mm_update.setEnabled(false);
        btn_mm_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mm_updateActionPerformed(evt);
            }
        });

        btn_mm_delete.setText("Delete");
        btn_mm_delete.setEnabled(false);
        btn_mm_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mm_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtf_mm_ItemDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mm_itemCd, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtf_mm_disc)
                                .addComponent(jtf_mm_BuyPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                .addComponent(jtf_mm_sellPrice, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(btn_mm_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_mm_add, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_mm_update, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_mm_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtf_mm_itemCd, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtf_mm_ItemDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtf_mm_BuyPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtf_mm_sellPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtf_mm_disc, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_mm_update, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_mm_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_mm_add, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_mm_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(97, 97, 97))
        );

        jTabbedPane3.addTab("Manage Miscellaneous", jPanel2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("List Patient"));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bill No", "Patient Id", "Amount", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("List Item Per Patient"));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Description", "Item Quantity", "Item Amount", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Item Panel"));

        jLabel8.setText("Name");

        jLabel9.setText("Address");

        jLabel10.setText("Ic Number");

        jLabel11.setText("Other ID");

        jLabel12.setText("Phone No.");

        jLabel13.setText("Bill No.");

        jLabel14.setText("Date");

        jtf_mb_name.setEditable(false);
        jtf_mb_name.setEnabled(false);

        jtf_mb_address.setEditable(false);
        jtf_mb_address.setEnabled(false);

        jtf_mb_ic.setEditable(false);
        jtf_mb_ic.setEnabled(false);

        jtf_mb_id.setEditable(false);
        jtf_mb_id.setEnabled(false);

        jtf_mb_phoneNum.setEditable(false);
        jtf_mb_phoneNum.setEnabled(false);

        jtf_mb_billNo.setEditable(false);
        jtf_mb_billNo.setEnabled(false);

        jtf_mb_date.setEditable(false);
        jtf_mb_date.setEnabled(false);

        jtf_mb_total.setEditable(false);
        jtf_mb_total.setEnabled(false);

        jLabel15.setText("Item Code");

        jLabel16.setText("Item Description");

        jLabel17.setText("Item Quantity");

        jLabel18.setText("Unit Price");

        jLabel19.setText("Total Price");

        btn_mb_add.setText("Add Item");
        btn_mb_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mb_addActionPerformed(evt);
            }
        });

        btn_mb_cancel.setText("Cancel");
        btn_mb_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mb_cancelActionPerformed(evt);
            }
        });

        btn_mb_update.setText("Update");
        btn_mb_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mb_updateActionPerformed(evt);
            }
        });

        btn_mb_delete.setText("Delete");
        btn_mb_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mb_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtf_mb_itemDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mb_itemCd, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mb_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtf_mb_total, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtf_mb_unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtf_mb_name, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mb_address, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mb_ic, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mb_id, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mb_phoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_mb_billNo, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jtf_mb_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_mb_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_mb_add, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_mb_update, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_mb_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtf_mb_name)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_address, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_ic, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_phoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_billNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtf_mb_date, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_itemCd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_itemDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_mb_unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtf_mb_total, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_mb_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(btn_mb_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_mb_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_mb_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        jTabbedPane3.addTab("Manage Bill", jPanel1);

        jButton3.setText("Back to Main Menu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 36)); // NOI18N
        jLabel7.setText("Billing System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(276, 276, 276)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addComponent(jTabbedPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtf_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_searchActionPerformed
        // searching field

    }//GEN-LAST:event_jtf_searchActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btn_generateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generateBillActionPerformed
        // TODO add your handling code here:
        // generate.jButton4(this);
        // generate.();
        generate m = new generate(); //set new window
        m.setVisible(true);//set new window visible
        dispose(); // for hide current window

    }//GEN-LAST:event_btn_generateBillActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
        try {
            int row = 0;

            row = jTable4.getSelectedRow(); //get no of row
            Table_click = (jTable4.getModel().getValueAt(row, 0).toString()); //assign row value to select

            //System.out.println(Table_click);
//            System.out.println(Table_click.getClass().getName()); // to check out their variable type
            DateFormat dateFormat;
            dateFormat = new SimpleDateFormat("yyyy-MM-dd"); //2015-01-06 
            Date date = new Date();
            //System.out.println(date);

            String sql = "SELECT DISTINCT "
                    + "pdd.DRUG_ITEM_CODE, mdc.D_TRADE_NAME, pdd.DISPENSED_QTY, mdc.D_PRICE_PPACK, pdd.DISPENSED_QTY * mdc.D_PRICE_PPACK AS TOTAL, ec.PMI_NO, pb.PMI_NO "
                    + "FROM ehr_central ec "
                    + "INNER JOIN pms_patient_biodata pb "
                    + "ON ec.PMI_NO = pb.PMI_NO "
                    //                    + "INNER JOIN customer_hdr ch "
                    //                    + "ON pb.ID_NO = ch.customer_id "
                    + "INNER JOIN pis_order_master pom "
                    + "ON ec.PMI_NO = pom.PMI_NO "
                    + "INNER JOIN pis_dispense_master pdm "
                    + "ON pom.ORDER_NO = pdm.ORDER_NO "
                    + "INNER JOIN pis_dispense_detail pdd "
                    + "ON pdm.ORDER_NO = pdd.ORDER_NO "
                    + "INNER JOIN pis_mdc2 mdc "
                    + "ON pdd.DRUG_ITEM_CODE = mdc.UD_MDC_CODE "
                    + "WHERE ec.PMI_NO = '" + Table_click + "' "
                    + "AND (ec.status = 1 OR ec.status = 3) ";
//                    + "AND ID_NO NOT IN ch.customer_id ";
//                    + "AND substring(pom.EPISODE_CODE,1,10)='" + dateFormat.format(date) + "' "
//                    + "AND substring(pdm.ORDER_DATE,1,10)='" + dateFormat.format(date) + "'";
//                    + "AND substring(pom.EPISODE_CODE,1,10)='2015-12-21' "
//                    + "AND substring(pdm.ORDER_DATE,1,10)='2015-12-21'";
            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

            // System.out.println(Table_click);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            //remove all row
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                //System.out.println("i " + i);
            }

            //add row and show value
//            JFormattedTextField fmtTxtField = new JFormattedTextField(df);
//            TableCellEditor cellEditor = new DefaultCellEditor(fmtTxtField);
//            jTable1.setDefaultEditor(Double.class, new DefaultCellEditor(fmtTxtField));
//            
            // jTable1.setCellEditor(cellEditor);
            for (int i = 0; i < data.size(); i++) {

                DecimalFormat df = new DecimalFormat("0.00"); // decimal format
                model.addRow(new Object[]{"", "", "", "", ""});

                jTable1.setValueAt(data.get(i).get(0), i, 0);
                jTable1.setValueAt(data.get(i).get(1), i, 1);
                jTable1.setValueAt(data.get(i).get(2), i, 2);
                jTable1.setValueAt(data.get(i).get(3), i, 3);
                jTable1.setValueAt(data.get(i).get(4), i, 4);
//                String row3 = data.get(i).get(2);
//                double row33 = Integer.parseInt(row3);
//                //System.out.println(row33);
//                String row333 = df.format(row33);
//                
//                String row4 = df.format(data.get(i).get(3));
//                double row44 = Integer.parseInt(row4);
//                
//                String row5 = df.format(data.get(i).get(4));
//                double row55 = Integer.parseInt(row5);
//                
//                jTable1.setValueAt(row333,i, 2);
////                jTable1.setValueAt(row44,i, 3);
////                jTable1.setValueAt(row55,i, 4);
            }
            //System.out.println(data.size());

            if (data.size() > 0) {
                btn_generateBill.setEnabled(true);
            }
            if (data.size() < 1) {
                btn_generateBill.setEnabled(false);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jTable4MouseClicked

    private void jtf_mm_itemCdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_mm_itemCdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_mm_itemCdActionPerformed

    private void btn_mm_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mm_addActionPerformed
        // TODO add your handling code here:
        String Jtext1 = (String) jtf_mm_itemCd.getText();
        String Jtext2 = (String) jtf_mm_ItemDesc.getText();
        String Jtext3 = (String) jtf_mm_BuyPrice.getText();
        String Jtext4 = (String) jtf_mm_sellPrice.getText();
        String Jtext5 = (String) jtf_mm_disc.getText();

        if (Jtext1 == null) {
            String infoMessage = "Please insert data in Item Code text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext2 == null) {
            String infoMessage = "Please insert data in Item Description text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext3 == null) {
            String infoMessage = "Please insert data in Buying price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext4 == null) {
            String infoMessage = "Please insert data in Selling Price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext5 == null) {
            String infoMessage = "Please insert data in Discount text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext1 != null) {
            try {

                String sqlinsert2 = "insert into miscellaneous_item(item_code, item_desc, buying_price, selling_price, discount)"
                        + "values('" + Jtext1 + "','" + Jtext2 + "','" + Jtext3 + "','" + Jtext4 + "'," + Jtext5 + " )";

                boolean insert2 = rc.setQuerySQL(host, port, sqlinsert2);
                String infoMessage = "Success add data";
                JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                //fillcombo();
                Table2();
                jtf_mm_itemCd.setText("");
                jtf_mm_ItemDesc.setText("");
                jtf_mm_BuyPrice.setText("");
                jtf_mm_sellPrice.setText("");
                jtf_mm_disc.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btn_mm_addActionPerformed

    private void btn_mm_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mm_cancelActionPerformed
        // TODO add your handling code here:
        btn_mm_add.setEnabled(true);
        btn_mm_update.setEnabled(false);
        btn_mm_delete.setEnabled(false);
        jtf_mm_itemCd.setEditable(true);
        jtf_mm_itemCd.setText("");
        jtf_mm_ItemDesc.setText("");
        jtf_mm_BuyPrice.setText("");
        jtf_mm_sellPrice.setText("");
        jtf_mm_disc.setText("");

    }//GEN-LAST:event_btn_mm_cancelActionPerformed

    private void btn_mm_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mm_updateActionPerformed
        // TODO add your handling code here:
        btn_mm_add.setEnabled(true);
        btn_mm_update.setEnabled(false);
        btn_mm_delete.setEnabled(false);
        jtf_mm_itemCd.setEditable(true);
        String Jtext1 = (String) jtf_mm_itemCd.getText();
        String Jtext2 = (String) jtf_mm_ItemDesc.getText();
        String Jtext3 = (String) jtf_mm_BuyPrice.getText();
        String Jtext4 = (String) jtf_mm_sellPrice.getText();
        String Jtext5 = (String) jtf_mm_disc.getText();
        if (Jtext1 == null) {
            String infoMessage = "Please insert data in Item Code text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext2 == null) {
            String infoMessage = "Please insert data in Item Description text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext3 == null) {
            String infoMessage = "Please insert data in Buying price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext4 == null) {
            String infoMessage = "Please insert data in Selling Price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext5 == null) {
            String infoMessage = "Please insert data in Discount text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext1 != null) {
            try {

                String sqlinsert2 = "UPDATE miscellaneous_item\n"
                        + "SET item_desc='" + Jtext2 + "', buying_price='" + Jtext3 + "', selling_price='" + Jtext4 + "', discount='" + Jtext5 + "' \n"
                        + "WHERE item_code='" + Jtext1 + "'";

                boolean insert2 = rc.setQuerySQL(host, port, sqlinsert2);
                String infoMessage = "Success update data";
                JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                //fillcombo();
                Table2();
                jtf_mm_itemCd.setText("");
                jtf_mm_ItemDesc.setText("");
                jtf_mm_BuyPrice.setText("");
                jtf_mm_sellPrice.setText("");
                jtf_mm_disc.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btn_mm_updateActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        try {
            btn_mm_add.setEnabled(false);
            btn_mm_update.setEnabled(true);
            btn_mm_delete.setEnabled(true);
            jtf_mm_itemCd.setEditable(false);
            int row = jTable2.getSelectedRow();
            String Table_click = (jTable2.getModel().getValueAt(row, 0).toString());
            String sqlclick = "select * from miscellaneous_item where item_code='" + Table_click + "'";
            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sqlclick);// execute query

            jtf_mm_itemCd.setText(data.get(0).get(1));
            jtf_mm_ItemDesc.setText(data.get(0).get(2));
            jtf_mm_BuyPrice.setText(data.get(0).get(3));
            jtf_mm_sellPrice.setText(data.get(0).get(4));
            jtf_mm_disc.setText(data.get(0).get(5));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void btn_mm_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mm_deleteActionPerformed
        // TODO add your handling code here:
        btn_mm_add.setEnabled(true);
        btn_mm_update.setEnabled(false);
        btn_mm_delete.setEnabled(false);
        jtf_mm_itemCd.setEditable(true);
        String Jtext1 = (String) jtf_mm_itemCd.getText();
        String Jtext2 = (String) jtf_mm_ItemDesc.getText();
        String Jtext3 = (String) jtf_mm_BuyPrice.getText();
        String Jtext4 = (String) jtf_mm_sellPrice.getText();
        String Jtext5 = (String) jtf_mm_disc.getText();
        if (Jtext1 == null) {
            String infoMessage = "Please insert data in Item Code text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext2 == null) {
            String infoMessage = "Please insert data in Item Description text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext3 == null) {
            String infoMessage = "Please insert data in Buying price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext4 == null) {
            String infoMessage = "Please insert data in Selling Price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext5 == null) {
            String infoMessage = "Please insert data in Discount text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (Jtext1 != null) {
            try {

                String sqlinsert2 = "DELETE FROM miscellaneous_item WHERE item_code='" + Jtext1 + "'";

                boolean insert2 = rc.setQuerySQL(host, port, sqlinsert2);
                String infoMessage = "Success delete data";
                JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                //fillcombo();
                Table2();
                jtf_mm_itemCd.setText("");
                jtf_mm_ItemDesc.setText("");
                jtf_mm_BuyPrice.setText("");
                jtf_mm_sellPrice.setText("");
                jtf_mm_disc.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btn_mm_deleteActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        btn_mb_update.setEnabled(false);
        btn_mb_delete.setEnabled(false);
        try {
            int row = 0;
            row = jTable3.getSelectedRow(); //get no of row

            billno = (jTable3.getModel().getValueAt(row, 0).toString()); //assign row value to select
            String sql = "SELECT DISTINCT "
                    + "item_cd, item_desc, quantity, item_amt, quantity * item_amt AS total "
                    + "FROM customer_dtl "
                    + "WHERE bill_no = '" + billno + "'";

            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query
            DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

            //remove all row
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                //System.out.println("i " + i);
            }

            for (int i = 0; i < data.size(); i++) {

                model.addRow(new Object[]{"", "", "", "", ""});

                jTable5.setValueAt(data.get(i).get(0), i, 0);
                jTable5.setValueAt(data.get(i).get(1), i, 1);
                jTable5.setValueAt(data.get(i).get(2), i, 2);
                jTable5.setValueAt(data.get(i).get(3), i, 3);
                jTable5.setValueAt(data.get(i).get(4), i, 4);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String sql = "SELECT DISTINCT "
                    + "pb.PATIENT_NAME, pb.HOME_ADDRESS, pb.NEW_IC_NO, pb.ID_NO, pb.MOBILE_PHONE, ch.bill_no, ch.txn_date "
                    + "FROM customer_hdr ch "
                    + "INNER JOIN pms_patient_biodata pb "
                    + "ON ch.customer_id = pb.ID_NO ";

            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

            jtf_mb_name.setText(data.get(0).get(0));
            jtf_mb_address.setText(data.get(0).get(1));
            jtf_mb_ic.setText(data.get(0).get(2));
            jtf_mb_id.setText(data.get(0).get(3));
            jtf_mb_phoneNum.setText(data.get(0).get(4));
            jtf_mb_billNo.setText(data.get(0).get(5));
            jtf_mb_date.setText(data.get(0).get(6));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jTable3MouseClicked

    private void btn_mb_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mb_cancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_mb_cancelActionPerformed

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        // TODO add your handling code here:

        btn_mb_add.setEnabled(false);
        btn_mb_update.setEnabled(true);
        btn_mb_delete.setEnabled(true);
        try {
            int row = 0;
            row = jTable5.getSelectedRow(); //get no of row

            itemCode = (jTable5.getModel().getValueAt(row, 0).toString()); //assign row value to select
            String sql = "SELECT DISTINCT "
                    + "item_cd, item_desc, quantity, item_amt, quantity * item_amt AS total "
                    + "FROM customer_dtl WHERE item_cd = '" + itemCode + "'";

            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

            jtf_mb_itemCd.setText(data.get(0).get(0));
            jtf_mb_itemDesc.setText(data.get(0).get(1));
            jtf_mb_quantity.setText(data.get(0).get(2));
            jtf_mb_unitPrice.setText(data.get(0).get(3));
            jtf_mb_total.setText(data.get(0).get(4));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jTable5MouseClicked

    private void btn_mb_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mb_addActionPerformed
        // TODO add your handling code here:
        double count = 1;
        double grttl = 0;
        String amt;
        String string;
        Date date1;

        String credit = null;
        String bulan;

        String name = (String) jtf_mb_name.getText();
        String address = (String) jtf_mb_address.getText();
        String ic = (String) jtf_mb_ic.getText();
        String id = (String) jtf_mb_id.getText();
        String telnum = (String) jtf_mb_phoneNum.getText();
        String billnum = (String) jtf_mb_billNo.getText();
        String billdate = (String) jtf_mb_date.getText();

        String code = (String) jtf_mb_itemCd.getText();
        String desc = (String) jtf_mb_itemDesc.getText();
        String qt = (String) jtf_mb_quantity.getText();
        String amount = (String) jtf_mb_unitPrice.getText();
        String total = (String) jtf_mb_total.getText();

        if (code == null) {
            String infoMessage = "Please insert data in Item Code text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (desc == null) {
            String infoMessage = "Please insert data in Item Description text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (qt == null) {
            String infoMessage = "Please insert data in quantity text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (amount == null) {
            String infoMessage = "Please insert data in unit price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (code != null) {

            try {

                String sqlinsert2 = "insert into customer_dtl(bill_no, txn_date, item_cd, item_desc, item_amt, quantity, customer_id)"
                        + "values("
                        + "'" + billnum + "',"
                        + "'" + billdate + "',"
                        + "'" + code + "',"
                        + "'" + desc + "',"
                        + "'" + amount + "',"
                        + "'" + qt + "',"
                        + "'" + id + "' )";

                boolean insert2 = rc.setQuerySQL(host, port, sqlinsert2);
                String infoMessage = "Success add data";
                JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);

                try {

                    try {

                        String sql = "SELECT DISTINCT "
                                + "item_amt * quantity as tot, txn_date "
                                + "FROM customer_dtl WHERE bill_no='" + billnum + "' "
                                + "AND customer_id ='" + id + "'";

                        ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

                        for (int i = 0; i < data.size(); i++) {
                            amt = data.get(i).get(0);
                            string = data.get(i).get(1);
                            
                            double grtotal = Double.parseDouble(amt);
                            grttl = grttl + grtotal;
                            count = count + 1;
                            System.out.println(grttl);
                            System.out.println(count);
                            
                            DateFormat dateFormat = new SimpleDateFormat("MM");
                            date1 = dateFormat.parse(string);
                            bulan = dateFormat.format(date1);
                            
                            System.out.println(bulan);
                            if (null != bulan) {
                                switch (bulan) {
                                    case "01":
                                        credit = "cr_amt_1";
                                        break;
                                    case "02":
                                        credit = "cr_amt_2";
                                        break;
                                    case "03":
                                        credit = "cr_amt_3";
                                        break;
                                    case "04":
                                        credit = "cr_amt_4";
                                        break;
                                    case "05":
                                        credit = "cr_amt_5";
                                        break;
                                    case "06":
                                        credit = "cr_amt_6";
                                        break;
                                    case "07":
                                        credit = "cr_amt_7";
                                        break;
                                    case "08":
                                        credit = "cr_amt_8";
                                        break;
                                    case "09":
                                        credit = "cr_amt_9";
                                        break;
                                    case "10":
                                        credit = "cr_amt_10";
                                        break;
                                    case "11":
                                        credit = "cr_amt_11";
                                        break;
                                    case "12":
                                        credit = "cr_amt_12";
                                        break;
                                    default:
                                        break;
                                }
                            }

                        }

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                    
                            System.out.println(credit);
                    String sqlinsert = "UPDATE customer_hdr\n"
                            + "SET item_amt='" + grttl + "', "
                            + "quantity ='" + count + "' "
                            + "WHERE bill_no='" + billnum + "' "
                            + "AND customer_id ='" + id + "'";

                    boolean insert = rc.setQuerySQL(host, port, sqlinsert);

                    String sqlinsert1 = "UPDATE customer_ledger\n"
                            + "SET bill_amt ='" + grttl + "', "
                            + "'" + credit + "' ='" + grttl + "' "
                            + "WHERE bill_no='" + billnum + "' "
                            + "AND customer_id ='" + id + "'";

                    boolean insert1 = rc.setQuerySQL(host, port, sqlinsert1);
                    String infoMessage1 = "Success update data";

                    JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                    
                    billing m = new billing(); //set new window
                    m.setVisible(true);//set new window visible
                    dispose();
                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btn_mb_addActionPerformed

    private void btn_mb_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mb_updateActionPerformed
        // TODO add your handling code here:
        double count = 1;
        double grttl = 0;
        String amt;
        String string;
        Date date1;

        String credit = null;
        String bulan;

        btn_mb_add.setEnabled(false);
        btn_mb_update.setEnabled(true);
        btn_mb_delete.setEnabled(true);
//        jtf_mb_itemCd.setEnabled(false);
        String name = (String) jtf_mb_name.getText();
        String address = (String) jtf_mb_address.getText();
        String ic = (String) jtf_mb_ic.getText();
        String id = (String) jtf_mb_id.getText();
        String telnum = (String) jtf_mb_phoneNum.getText();
        String billnum = (String) jtf_mb_billNo.getText();
        String billdate = (String) jtf_mb_date.getText();

        String code = (String) jtf_mb_itemCd.getText();
        String desc = (String) jtf_mb_itemDesc.getText();
        String qt = (String) jtf_mb_quantity.getText();
        String amount = (String) jtf_mb_unitPrice.getText();
        String total = (String) jtf_mb_total.getText();
        if (code == null) {
            String infoMessage = "Please insert data in Item Code text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (desc == null) {
            String infoMessage = "Please insert data in Item Description text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (qt == null) {
            String infoMessage = "Please insert data in quantity text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (amount == null) {
            String infoMessage = "Please insert data in unit price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (code != null) {
            try {

                String sqlinsert2 = "UPDATE customer_dtl\n"
                        + "SET item_desc='" + desc + "',"
                        + " quantity='" + qt + "',"
                        + " item_amt='" + amount + "' "
                        + "WHERE bill_no='" + billnum + "' "
                        + "AND item_cd ='" + code + "' "
                        + "AND customer_id ='" + id + "'";

                boolean insert2 = rc.setQuerySQL(host, port, sqlinsert2);
                String infoMessage = "Success update data";
                JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                 

                    try {

                        String sql = "SELECT DISTINCT "
                                + "item_amt * quantity as tot, txn_date "
                                + "FROM customer_dtl WHERE bill_no='" + billnum + "' "
                                + "AND customer_id ='" + id + "'";

                        ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

                        for (int i = 0; i < data.size(); i++) {
                            amt = data.get(i).get(0);
                            string = data.get(i).get(1);
                            
                            double grtotal = Double.parseDouble(amt);
                            grttl = grttl + grtotal;
                            count = count + 1;
                            System.out.println(grttl);
                            System.out.println(count);
                            
                            DateFormat dateFormat = new SimpleDateFormat("MM");
                            date1 = dateFormat.parse(string);
                            bulan = dateFormat.format(date1);
                            
                            System.out.println(bulan);
                            if (null != bulan) {
                                switch (bulan) {
                                    case "01":
                                        credit = "cr_amt_1";
                                        break;
                                    case "02":
                                        credit = "cr_amt_2";
                                        break;
                                    case "03":
                                        credit = "cr_amt_3";
                                        break;
                                    case "04":
                                        credit = "cr_amt_4";
                                        break;
                                    case "05":
                                        credit = "cr_amt_5";
                                        break;
                                    case "06":
                                        credit = "cr_amt_6";
                                        break;
                                    case "07":
                                        credit = "cr_amt_7";
                                        break;
                                    case "08":
                                        credit = "cr_amt_8";
                                        break;
                                    case "09":
                                        credit = "cr_amt_9";
                                        break;
                                    case "10":
                                        credit = "cr_amt_10";
                                        break;
                                    case "11":
                                        credit = "cr_amt_11";
                                        break;
                                    case "12":
                                        credit = "cr_amt_12";
                                        break;
                                    default:
                                        break;
                                }
                            }

                        }

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                    
                            System.out.println(credit);
                    String sqlinsert = "UPDATE customer_hdr\n"
                            + "SET item_amt='" + grttl + "', "
                            + "quantity ='" + count + "' "
                            + "WHERE bill_no='" + billnum + "' "
                            + "AND customer_id ='" + id + "'";

                    boolean insert = rc.setQuerySQL(host, port, sqlinsert);

                    String sqlinsert1 = "UPDATE customer_ledger\n"
                            + "SET bill_amt ='" + grttl + "', "
                            + "'" + credit + "' ='" + grttl + "' "
                            + "WHERE bill_no='" + billnum + "' "
                            + "AND customer_id ='" + id + "'";

                    boolean insert1 = rc.setQuerySQL(host, port, sqlinsert1);
                    String infoMessage1 = "Success update data";

                    JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                    
                    billing m = new billing(); //set new window
                    m.setVisible(true);//set new window visible
                    dispose();
                    
         
            
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btn_mb_updateActionPerformed

    private void btn_mb_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mb_deleteActionPerformed
        // TODO add your handling code here:
        double count = 1;
        double grttl = 0;
        String amt;
        String string;
        Date date1;

        String credit = null;
        String bulan;

        btn_mb_add.setEnabled(false);
        btn_mb_update.setEnabled(true);
        btn_mb_delete.setEnabled(true);
//        jtf_mb_itemCd.setEnabled(false);
        String name = (String) jtf_mb_name.getText();
        String address = (String) jtf_mb_address.getText();
        String ic = (String) jtf_mb_ic.getText();
        String id = (String) jtf_mb_id.getText();
        String telnum = (String) jtf_mb_phoneNum.getText();
        String billnum = (String) jtf_mb_billNo.getText();
        String billdate = (String) jtf_mb_date.getText();

        String code = (String) jtf_mb_itemCd.getText();
        String desc = (String) jtf_mb_itemDesc.getText();
        String qt = (String) jtf_mb_quantity.getText();
        String amount = (String) jtf_mb_unitPrice.getText();
        String total = (String) jtf_mb_total.getText();
        if (code == null) {
            String infoMessage = "Please insert data in Item Code text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (desc == null) {
            String infoMessage = "Please insert data in Item Description text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (qt == null) {
            String infoMessage = "Please insert data in quantity text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (amount == null) {
            String infoMessage = "Please insert data in unit price text field.";
            JOptionPane.showMessageDialog(null, infoMessage, "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (code != null) {
            try {

                String sqlinsert2 = "DELETE FROM customer_dtl "
                        + "WHERE bill_no='" + billnum + "' "
                        + "AND item_cd ='" + code + "' "
                        + "AND customer_id ='" + id + "'";

                boolean insert2 = rc.setQuerySQL(host, port, sqlinsert2);
                String infoMessage = "Success delete data";
                JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);

                 try {

                        String sql = "SELECT DISTINCT "
                                + "item_amt * quantity as tot, txn_date "
                                + "FROM customer_dtl WHERE bill_no='" + billnum + "' "
                                + "AND customer_id ='" + id + "'";

                        ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query

                        for (int i = 0; i < data.size(); i++) {
                            amt = data.get(i).get(0);
                            string = data.get(i).get(1);
                            
                            double grtotal = Double.parseDouble(amt);
                            grttl = grttl + grtotal;
                            count = count + 1;
                            System.out.println(grttl);
                            System.out.println(count);
                            
                            DateFormat dateFormat = new SimpleDateFormat("MM");
                            date1 = dateFormat.parse(string);
                            bulan = dateFormat.format(date1);
                            
                            System.out.println(bulan);
                            if (null != bulan) {
                                switch (bulan) {
                                    case "01":
                                        credit = "cr_amt_1";
                                        break;
                                    case "02":
                                        credit = "cr_amt_2";
                                        break;
                                    case "03":
                                        credit = "cr_amt_3";
                                        break;
                                    case "04":
                                        credit = "cr_amt_4";
                                        break;
                                    case "05":
                                        credit = "cr_amt_5";
                                        break;
                                    case "06":
                                        credit = "cr_amt_6";
                                        break;
                                    case "07":
                                        credit = "cr_amt_7";
                                        break;
                                    case "08":
                                        credit = "cr_amt_8";
                                        break;
                                    case "09":
                                        credit = "cr_amt_9";
                                        break;
                                    case "10":
                                        credit = "cr_amt_10";
                                        break;
                                    case "11":
                                        credit = "cr_amt_11";
                                        break;
                                    case "12":
                                        credit = "cr_amt_12";
                                        break;
                                    default:
                                        break;
                                }
                            }

                        }

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                    
                            System.out.println(credit);
                    String sqlinsert = "UPDATE customer_hdr\n"
                            + "SET item_amt='" + grttl + "', "
                            + "quantity ='" + count + "' "
                            + "WHERE bill_no='" + billnum + "' "
                            + "AND customer_id ='" + id + "'";

                    boolean insert = rc.setQuerySQL(host, port, sqlinsert);

                    String sqlinsert1 = "UPDATE customer_ledger\n"
                            + "SET bill_amt ='" + grttl + "', "
                            + "'" + credit + "' ='" + grttl + "' "
                            + "WHERE bill_no='" + billnum + "' "
                            + "AND customer_id ='" + id + "'";

                    boolean insert1 = rc.setQuerySQL(host, port, sqlinsert1);
                    String infoMessage1 = "Success update data";

                    JOptionPane.showMessageDialog(null, infoMessage, "Success", JOptionPane.INFORMATION_MESSAGE);
                    
                    
                billing m = new billing(); //set new window
                    m.setVisible(true);//set new window visible
                    jTabbedPane3.setVisible(true);
                    dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btn_mb_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(billing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new billing().setVisible(true);

            }
        });
    }

    private void Table4() {

        DateFormat dateFormat;
        dateFormat = new SimpleDateFormat("yyyy-MM-dd"); //2015-01-06 
        Date date = new Date();
        // System.out.println(dateFormat.format(date)); //2014/08/06 15:59:48
        try {
            String sql = "SELECT DISTINCT "
                    + "pe.PMI_NO, pb.NEW_IC_NO, pb.ID_NO, pb.PATIENT_NAME,  pb.HOME_ADDRESS, pb.MOBILE_PHONE "
                    + "FROM pms_episode pe "
                    + "INNER JOIN ehr_central ec "
                    + "ON pe.PMI_NO = ec.PMI_NO "
                    + "INNER JOIN pms_patient_biodata pb "
                    + "ON ec.PMI_NO = pb.PMI_NO "
                    + "WHERE (ec.status = 1 OR ec.status = 3) "
                    + "AND pe.STATUS ='Discharge' "
                    + "AND pb.ID_NO NOT IN "
                    + "(SELECT customer_id FROM customer_hdr WHERE customer_id = pb.ID_NO)";
            //+ "AND ID_NO NOT IN ch.customer_id ";
//            + "AND substring(ec.C_TXNDATE,1,10)='"+ dateFormat.format(date) +"'";
            //+ "AND substring(ec.C_TXNDATE,1,10)='2015-12-21'";
            //substring(DiagnosisCd,1,2)
            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query
            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

            //remove all row
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }

            //add row and show value
            for (int i = 0; i < data.size(); i++) {
                model.addRow(new Object[]{"", "", "", "", ""});

                jTable4.setValueAt(data.get(i).get(0), i, 0);
                jTable4.setValueAt(data.get(i).get(1), i, 1);
                jTable4.setValueAt(data.get(i).get(2), i, 2);
                jTable4.setValueAt(data.get(i).get(3), i, 3);
                jTable4.setValueAt(data.get(i).get(4), i, 4);
                jTable4.setValueAt(data.get(i).get(5), i, 5);
            }

            test();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void Table2() {
        try {
            String sql = "SELECT * FROM miscellaneous_item";
            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

            //remove all row
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }

            //add row and show value
            for (int i = 0; i < data.size(); i++) {
                model.addRow(new Object[]{"", "", "", "", ""});

                jTable2.setValueAt(data.get(i).get(1), i, 0);
                jTable2.setValueAt(data.get(i).get(2), i, 1);
                jTable2.setValueAt(data.get(i).get(3), i, 2);
                jTable2.setValueAt(data.get(i).get(4), i, 3);
                jTable2.setValueAt(data.get(i).get(5), i, 4);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void Table3billitem() {
        try {
            String sql = "SELECT DISTINCT "
                    + "bill_no, customer_id, item_amt, quantity "
                    + "FROM customer_hdr";

            ArrayList<ArrayList<String>> data = rc.getQuerySQL(host, port, sql);// execute query
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

            //remove all row
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }

            //add row and show value
            for (int i = 0; i < data.size(); i++) {
                model.addRow(new Object[]{"", "", "", "", ""});

                jTable3.setValueAt(data.get(i).get(0), i, 0);
                jTable3.setValueAt(data.get(i).get(1), i, 1);
                jTable3.setValueAt(data.get(i).get(2), i, 2);
                jTable3.setValueAt(data.get(i).get(3), i, 3);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void test() {
        TableRowSorter<TableModel> rowSorter
                = new TableRowSorter<TableModel>(jTable4.getModel());
        jTable4.setRowSorter(rowSorter);

        jtf_search.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jtf_search.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jtf_search.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_generateBill;
    private javax.swing.JButton btn_mb_add;
    private javax.swing.JButton btn_mb_cancel;
    private javax.swing.JButton btn_mb_delete;
    private javax.swing.JButton btn_mb_update;
    private javax.swing.JButton btn_mm_add;
    private javax.swing.JButton btn_mm_cancel;
    private javax.swing.JButton btn_mm_delete;
    private javax.swing.JButton btn_mm_update;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField jtf_mb_address;
    private javax.swing.JTextField jtf_mb_billNo;
    private javax.swing.JTextField jtf_mb_date;
    private javax.swing.JTextField jtf_mb_ic;
    private javax.swing.JTextField jtf_mb_id;
    private javax.swing.JTextField jtf_mb_itemCd;
    private javax.swing.JTextField jtf_mb_itemDesc;
    private javax.swing.JTextField jtf_mb_name;
    private javax.swing.JTextField jtf_mb_phoneNum;
    private javax.swing.JTextField jtf_mb_quantity;
    private javax.swing.JTextField jtf_mb_total;
    private javax.swing.JTextField jtf_mb_unitPrice;
    private javax.swing.JTextField jtf_mm_BuyPrice;
    private javax.swing.JTextField jtf_mm_ItemDesc;
    private javax.swing.JTextField jtf_mm_disc;
    private javax.swing.JTextField jtf_mm_itemCd;
    private javax.swing.JTextField jtf_mm_sellPrice;
    private javax.swing.JTextField jtf_search;
    // End of variables declaration//GEN-END:variables

}
